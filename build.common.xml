<?xml version="1.0" ?>
<!--
 * $Revision$ $Date$ $Author$
 * Copyright (c) 2009-2011 Tessella plc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For more information about this project, visit
 *   http://www.keep-project.eu/
 *   http://emuframework.sourceforge.net/
 * or contact us via email:
 *   blohman at users.sourceforge.net
 *   dav_m at users.sourceforge.net
 *   bkiers at users.sourceforge.net
 * Developed by:
 *   Tessella plc <www.tessella.com>
 *   Koninklijke Bibliotheek <www.kb.nl>
 *   KEEP <www.keep-project.eu>
 * Project Title: Core Emulation Framework (Core EF) 
-->

<!-- 
	build.common.xml
	
	Build file that can be imported in order to get
	a bunch of other imports and macros 'for free'.
-->

<project name="CEF-common" basedir=".">
	
	<!--================================================================================-->
	<!-- common imports																	-->
	<!--================================================================================-->
		
	<!-- this bit of magic means that importers get our imports resolving correctly
	     see here: http://ant.apache.org/manual/CoreTasks/import.html -->
	<dirname property="CEF-common.basedir" file="${ant.file.CEF-common}"/>
	
	<!-- we can now reference property files relative to the magic import-proof root: -->

	<!-- user.properties lets the current user override anything they like... -->
	<property file="${CEF-common.basedir}/user.properties"/>
	<property file="${CEF-common.basedir}/test.properties"/>

	<!-- EF version -->
	<property name="version" value="1.1.0"/>
	
	<!--================================================================================-->
	<!-- common macros 																	-->
	<!--================================================================================-->
	
	<!-- H2 RunScript: executes H2's RunScript tool with parameters -->
	<macrodef name="H2RunScript">
		<attribute name="url" default="${h2.jdbc.prefix}${h2.db.url}${h2.db.exists}${h2.db.engineschema}"/>
		<attribute name="user"/>
		<attribute name="password"/> 
		<attribute name="script"/>
		<attribute name="failonerror" default="true"/>
	
		<element name="arguments" optional="true"/>
		
		<sequential>
			<!-- executes "RunScript -url [url] -user [user] -password [password] -script [script] -->
			<echo level="info" 
			message="executing: org.h2.tools.RunScript -url @{url} -user @{user} -password @{password} -script @{script}"/>
	
	        <java fork="true" classname="org.h2.tools.RunScript">
	            <classpath>
	                <path refid="dev.classpath"/>
	            </classpath>
	        	<arg line='-url "@{url}"'/>
	        	<arg line="-user @{user}"/>
	        	<arg line="-password @{password}"/>
	        	<arg line="-script @{script}"/>
	        	<arguments/>
	        </java>
		</sequential>
	</macrodef>

    <!-- svnstat script -->
    <macrodef name="svnstat">
        <attribute name="svnlog"/>
        <attribute name="output" default="${svnstat.dir.out}"/>
        <attribute name="dir" default="${svnstat.dir.in}"/>
        <sequential>
	        <java fork="true" classname="de.agentlab.svnstat.SvnStat">
	            <classpath>
	                <path refid="dev-classpath"/>
	                <path location="@{dir}/SvnStat-all.jar"/>
	            </classpath>
	        	<arg line='-r "@{svnlog}"'/>
	        	<arg line="-d @{output}"/>
	        	<arg line="-config @{dir}/SvnStat.properties"/>
	        </java>
        </sequential>                
	</macrodef>


</project>
